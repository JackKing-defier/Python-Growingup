
#变成杨辉三角先确定流程： 1. 前两项无规律 所以先付初值 2. 第 n 项起 (n>=3)： 第一和第 n 个数为 1 其余项第 i 项为前一行第 i-1 和第 i 个数的和
#所以为了便于理解，建立了两个列表 其中 L=list(S) 为把解出的列表赋值给上一行的列表 L=S 是同一个列表会产生计算错误


def triangles():
    n = 0
    L = []
    S = []
    while(True):
        S.append(0)
        n = n+1
        if n == 1:
            L = [1]
            yield L
        elif n == 2:
            L = [1,1]
            yield L
        else:
            for i in range(0, n):
                if i == 0:
                    S[i] = 1
                elif i == n-1:
                    S[i] = 1
                else:
                    S[i] = L[i-1] + L[i]
            L = list(S)
            yield L

# 期待输出:
# [1]
# [1, 1]
# [1, 2, 1]
# [1, 3, 3, 1]
# [1, 4, 6, 4, 1]
# [1, 5, 10, 10, 5, 1]
# [1, 6, 15, 20, 15, 6, 1]
# [1, 7, 21, 35, 35, 21, 7, 1]
# [1, 8, 28, 56, 70, 56, 28, 8, 1]
# [1, 9, 36, 84, 126, 126, 84, 36, 9, 1]
n = 0
results = []
for t in triangles():
    print(t)
    results.append(t)
    n = n + 1
    if n == 10:
        break
if results == [
    [1],
    [1, 1],
    [1, 2, 1],
    [1, 3, 3, 1],
    [1, 4, 6, 4, 1],
    [1, 5, 10, 10, 5, 1],
    [1, 6, 15, 20, 15, 6, 1],
    [1, 7, 21, 35, 35, 21, 7, 1],
    [1, 8, 28, 56, 70, 56, 28, 8, 1],
    [1, 9, 36, 84, 126, 126, 84, 36, 9, 1]
]:
    print('测试通过!')
else:
    print('测试失败!')